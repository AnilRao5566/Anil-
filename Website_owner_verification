const nodemailer = require('nodemailer');
const crypto = require('crypto');
const User = require('./models/User');

app.post('/register', async (req, res) => {
  try {
    const { email, password } = req.body;

    const token = crypto.randomBytes(32).toString('hex');
    const newUser = new User({ email, password, isVerified: false, verificationToken: token });
    await newUser.save();

    const transporter = nodemailer.createTransport({
      service: 'Gmail',
      auth: { user: 'your-email@gmail.com', pass: 'your-email-password' },
    });

    const mailOptions = {
      from: 'no-reply@example.com',
      to: email,
      subject: 'Verify your account',
      html: `<a href="http://localhost:3000/verify/${token}">Click to verify</a>`,
    };

    await transporter.sendMail(mailOptions);
    res.status(200).json({ message: 'Verification email sent' });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

app.get('/verify/:token', async (req, res) => {
  try {
    const user = await User.findOne({ verificationToken: req.params.token });

    if (!user) return res.status(400).send('Invalid token');

    user.isVerified = true;
    user.verificationToken = undefined;
    await user.save();

    res.status(200).send('Account verified');
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});
